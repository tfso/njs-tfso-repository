{"version":3,"file":"expressionvisitor_object_expression.js","sourceRoot":"","sources":["../../src/test/expressionvisitor_object_expression.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AACjC,gEAAgE;AAEhE,QAAQ,CAAC,2DAA2D,EAAE,GAAG,EAAE;IACvE,IAAI,OAA+B,EAC/B,IAAsB,CAAC;IAE3B,UAAU,CAAC,GAAG,EAAE;QACZ,OAAO,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC;IACzC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACjC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAA,CAAC,CAAC,QAAQ,EAAE,EAAE,8BAA8B,CAAC,CAAC;QAC3H,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAA,CAAC,CAAC,QAAQ,EAAE,EAAE,8BAA8B,CAAC,CAAC;QACvH,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAA,CAAC,CAAC,QAAQ,EAAE,EAAE,wBAAwB,CAAC,CAAC;IAC/G,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC","sourcesContent":["import * as assert from 'assert';\nimport * as Expr from './../linq/expressions/expressionvisitor';\n\ndescribe(\"When using ExpressionVisitor for object Lambda expression\", () => {\n    var visitor: Expr.ExpressionVisitor,\n        expr: Expr.IExpression;\n\n    beforeEach(() => {\n        visitor = new Expr.ExpressionVisitor;\n    })\n\n    it(\"it should handle toString\", () => {\n        assert.equal(visitor.visitLambda(() => <object>{ \"key\": 123, \"value\": \"abc\" }).toString(), '{\"key\": 123, \"value\": \"abc\"}');\n        assert.equal(visitor.visitLambda(() => <object>{ key: 123, value: \"abc\" }).toString(), '{\"key\": 123, \"value\": \"abc\"}');\n        assert.equal(visitor.visitLambda(() => <object>{ 0: 123, 1: \"abc\" }).toString(), '{\"0\": 123, \"1\": \"abc\"}');\n    })\n});\n"]}