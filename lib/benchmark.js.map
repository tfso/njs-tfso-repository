{"version":3,"file":"benchmark.js","sourceRoot":"","sources":["../src/benchmark.ts"],"names":[],"mappings":";;AAAA,uCAAsC;AACtC,sFAAkF;AAKlF,IAAI,KAAK,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC;AAKhC,IAAI,sBAAsB,GAAG,CAAC;IAC1B,IAAI,KAAK,GAAG,EAAE,CAAC;IAEf,0BAA0B,QAAQ;QAE9B,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEzB,IAAI,CAAC,EAAE,EACP;YAEI,wDAAwD;YAExD,IAAI,SAAS,GAAG,QAAQ;iBACnB,OAAO,CAAC,8BAA8B,EAAE,UAAU,CAAC,EAAE,KAAK;gBACvD,OAAO,WAAW,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;YACvC,CAAC,CAAC;gBACF,yFAAyF;iBACxF,OAAO,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;YAE5C,EAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,YAAY,SAAS,IAAI,CAAC,CAAC;SAEnD;QAED,OAAO,EAAE,CAAC;IACd,CAAC;IAAA,CAAC;IAEF,OAAO,gBAAgB,CAAC;AAC5B,CAAC,CAAC,EAAE,CAAC;AACL,IAAI,QAAQ,GAAG,sBAAsB,CAAC,6CAA6C,CAAC,CAAC;AAErF,IAAI,UAAU,GAAG,IAAI,+CAAsB,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,wBAAwB,CAAC,GAAG,MAAM,eAAe,CAAC,CAAC;AAEnH,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,aAAa;AACb,KAAK;KACA,GAAG,CAAC,iBAAiB,EAAE;IACpB,yBAAyB,CAAC,GAAG,MAAM,EAAE,eAAe,CAAC;AACzD,CAAC,CAAC;KACD,GAAG,CAAC,mBAAmB,EAAE;IACtB,+CAAsB,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;AACtE,CAAC,CAAC;KACD,GAAG,CAAC,MAAM,EAAE;IACT,IAAI,CAAC,mDAAmD,CAAC,CAAC;AAC9D,CAAC,CAAC;KACD,GAAG,CAAC,UAAU,EAAE;IACb,IAAI,QAAQ,CAAC,QAAQ,EAAE,6DAA6D,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7F,CAAC,CAAC;KACD,GAAG,CAAC,gBAAgB,EAAE;IACnB,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAC;AACvC,CAAC,CAAC;IACF,iBAAiB;KAChB,EAAE,CAAC,OAAO,EAAE,UAAU,KAAK;IACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC;KACD,EAAE,CAAC,UAAU,EAAE;IACZ,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;IACF,aAAa;KACZ,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AAE5B,SAAS;AACT,kDAAkD;AAClD,sDAAsD;AACtD,gCAAgC","sourcesContent":["import * as Benchmark from 'benchmark'\nimport { TemplateLiteralVisitor } from './linq/expressions/templateliteralvisitor'\n\n\n\n\nvar suite = new Benchmark.Suite;\n\n\n\n\nvar generateTemplateString = (function () {\n    var cache = {};\n\n    function generateTemplate(template) {\n\n        var fn = cache[template];\n\n        if (!fn)\n        {\n\n            // Replace ${expressions} (etc) with ${map.expressions}.\n\n            var sanitized = template\n                .replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g, function (_, match) {\n                    return `\\$\\{map.${match.trim()}\\}`;\n                })\n                // Afterwards, replace anything that's not ${map.expressions}' (etc) with a blank string.\n                .replace(/(\\$\\{(?!map\\.)[^}]+\\})/g, '');\n\n            fn = Function('map', `return \\`${sanitized}\\``);\n\n        }\n\n        return fn;\n    };\n\n    return generateTemplate;\n})();\nvar template = generateTemplateString('template string adds ${number} like nothing');\n\nvar expression = new TemplateLiteralVisitor().visitLambda(() => `template string adds ${2 + number} like nothing`);\n\nvar number = 5;\n// add tests \nsuite\n    .add('TemplateLiteral', function () {\n        `template strings adds ${2 + number++} like nothing`;\n    })\n    .add('RepositoryLiteral', function () {\n        TemplateLiteralVisitor.evaluate(expression, { number: number++ });\n    })\n    .add('Eval', function () {\n        eval('`template string adds ${2 + number} like nothing`');\n    })\n    .add('Function', function () {\n        new Function('number', 'return `template string adds ${2 + number++} like nothing`;')(5);\n    })\n    .add('RegExp Replace', function () {\n        template({ number: 2 + number++ });\n    })\n    // add listeners \n    .on('cycle', function (event) {\n        console.log(String(event.target));\n    })\n    .on('complete', function () {\n        console.log('Fastest is ' + this.filter('fastest').map('name'));\n    })\n    // run async \n    .run({ 'async': true });\n\n// logs: \n// => RegExp#test x 4,161,532 +-0.99% (59 cycles) \n// => String#indexOf x 6,139,623 +-1.00% (131 cycles) \n// => Fastest is String#indexOf "]}