{"version":3,"file":"operator.js","sourceRoot":"","sources":["../../../src/linq/operators/operator.ts"],"names":[],"mappings":";;AAAA,IAAY,YASX;AATD,WAAY,YAAY;IACpB,iDAAK,CAAA;IACL,+CAAI,CAAA;IACJ,+CAAI,CAAA;IACJ,qDAAO,CAAA;IACP,mDAAM,CAAA;IACN,+CAAI,CAAA;IACJ,yDAAS,CAAA;IACT,iDAAK,CAAA;AACT,CAAC,EATW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QASvB;AAED;IAGI,YAAmB,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAF3B,YAAO,GAAY,KAAK,CAAC;IAInC,CAAC;IAKM,MAAM;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;CACJ;AAbD,4BAaC","sourcesContent":["export enum OperatorType {\r\n    Where,\r\n    Take,\r\n    Skip,\r\n    OrderBy,\r\n    Select,\r\n    Join,\r\n    SkipWhile,\r\n    Slice\r\n}\r\n\r\nexport abstract class Operator<TEntity> {\r\n    protected removed: boolean = false;\r\n\r\n    constructor(public type: OperatorType) {\r\n\r\n    }\r\n    \r\n    public abstract evaluate(...args: any[]): Iterable<TEntity>;\r\n    public abstract evaluateAsync(...args: any[]): AsyncIterable<TEntity>;\r\n\r\n    public remove() {\r\n        this.removed = true;\r\n    }\r\n}"]}