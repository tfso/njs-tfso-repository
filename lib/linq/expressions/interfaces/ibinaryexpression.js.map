{"version":3,"file":"ibinaryexpression.js","sourceRoot":"","sources":["../../../../src/linq/expressions/interfaces/ibinaryexpression.ts"],"names":[],"mappings":";;AAEA,IAAY,kBAYX;AAZD,WAAY,kBAAkB;IAC1B,yEAAW,CAAA;IACX,mEAAQ,CAAA;IACR,mEAAQ,CAAA;IACR,+EAAc,CAAA;IAEd,iEAAO,CAAA;IACP,yDAAG,CAAA;IACH,uDAAE,CAAA;IACF,yEAAW,CAAA;IACX,qEAAS,CAAA;IACT,uEAAU,CAAA;AACd,CAAC,EAZW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAY7B","sourcesContent":["import { IExpression } from './iexpression';\n\nexport enum BinaryOperatorType {\n    Subtraction,\n    Addition,\n    Division,\n    Multiplication,\n\n    Modulus,        // %\n    And,            // &\n    Or,             // |\n    ExclusiveOr,    // ^\n    LeftShift,      // <<\n    RightShift,     // >>\n}\n\nexport interface IBinaryExpression extends IExpression {\n    operator: BinaryOperatorType\n    left: IExpression\n    right: IExpression\n}"]}